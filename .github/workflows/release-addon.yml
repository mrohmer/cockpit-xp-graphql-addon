on:
  push:
    tags:
      - 'v*'

name: Release Addon

jobs:
  build-server:
    name: Build Server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: arduino/setup-task@v1
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16.1'
      - name: replace env vars
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '__'
          tokenSuffix: '__'
          files: '["packages/server/cmd/update/update.go"]'
        env:
          CURRENT_VERSION: ${{ github.ref_name }}
      - name: Build
        run: |
          task generate
          task build:go:windows
      - uses: actions/upload-artifact@master
        with:
          name: server
          path: packages/server/dist
  build-addon:
    name: Build Addon
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: arduino/setup-task@v1
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Build
        run: task bundle:cps
      - uses: actions/upload-artifact@master
        with:
          name: addon
          path: packages/addon/dist
  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: arduino/setup-task@v1
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - run: yarn install
      - name: Build
        run: task prerender:frontend
      - uses: actions/upload-artifact@master
        with:
          name: frontend
          path: packages/frontend/dist
  release:
    name: Release Addon
    runs-on: ubuntu-latest
    needs:
      - build-server
      - build-addon
      - build-frontend
    steps:
      - uses: actions/checkout@v2
      - uses: arduino/setup-task@v1
      - uses: actions/download-artifact@v2
        with:
          name: server
          path: packages/server/dist
      - uses: actions/download-artifact@v2
        with:
          name: addon
          path: packages/addon/dist
      - uses: actions/download-artifact@v2
        with:
          name: frontend
          path: packages/frontend/dist
      - name: Copy files to dist
        run: task copy:root
      - name: Zip Assets
        run: |
          cp README.md dist
          cd dist
          zip "../dist" -r ./** ./.wc.yaml
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Addon Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist.zip
          asset_name: graphql-addon-${{ github.ref }}.zip
          asset_content_type: application/zip
